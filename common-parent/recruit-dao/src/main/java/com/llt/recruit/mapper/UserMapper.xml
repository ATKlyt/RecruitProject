<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.llt.recruit.mapper.mapper.UserMapper">

  <update id="updateNickname" >
    update user set nickname = #{nickname} where id = #{userId}
  </update>

  <insert id="insertUser" parameterType="com.llt.recruit.model.User">
    insert into user(username , password , name , nickname , role , avatar)
    value (#{username}, MD5(#{password}),#{name},#{nickname},#{role},#{avatar})
  </insert>

  <select id="findInterviewList" parameterType="Map" resultMap="ExamineeMap">
    select
    u.id , u.avatar , u.name , u.nickname , u.role , u.username ,
    s.email , s.school , s.telephone , s.status ,
    e.major
    from
    user u, studentinfo s, entryform e
    WHERE
    u.id = s.user_Id AND u.id = e.user_Id AND s.status = 6
    <if test="params.name != null">
      and  u.name like '%${params.name[0]}%'
    </if>
    <if test="params.email != null">
      and  s.email like '%${params.email[0]}%'
    </if>
  </select>

  <select id="findAllExaminee" parameterType="Map" resultMap="ExamineeMap">
    select
        u.id , u.avatar , u.name , u.nickname , u.role , u.username ,
		s.email , s.school , s.telephone , s.status ,
		e.major
    from
        user u, studentinfo s, entryform e
    WHERE
        u.id = s.user_Id AND u.id = e.user_Id
    <if test="params.name != null">
        and  u.name like '%${params.name[0]}%'
    </if>
    <if test="params.email != null">
        and  s.email like '%${params.email[0]}%'
    </if>
  </select>

  <select id="findAllAdmin" parameterType="Map" resultMap="BaseResultMap">
    select
        u.id , u.avatar , u.name , u.nickname , u.role , u.username
    from
        user u
    WHERE
        u.role != '用户'
    <if test="params.name != null">
        and  u.name like '%${params.name[0]}%'
    </if>
    <if test="params.role != null">
        and  u.role like '%${params.role[0]}%'
    </if>
  </select>

  <select id="findAllCommonUser" parameterType="Map" resultMap="ExamineeMap">
    select
        u.id , u.avatar , u.name , u.nickname , u.role , u.username ,
		s.email , s.school , s.telephone , s.status
    from
        user u, studentinfo s
    WHERE
        u.id = s.user_Id
    <if test="params.name != null">
    and  u.name like '%${params.name[0]}%'
    </if>
    <if test="params.email != null">
        and  s.email like '%${params.email[0]}%'
    </if>

  </select>

  <update id="updatePassword">
    update user set password = MD5(#{password}) where id = #{id}
  </update>

  <select id="login" parameterType="java.lang.String" resultType="com.llt.recruit.model.User">
    select * from user where username = #{username} and password = MD5(#{password})
  </select>

  <!--  用户名查重-->
  <select id="findByUsername" parameterType="java.lang.String" resultType="com.llt.recruit.model.User">
    select * from user where username = #{username}
  </select>

  <resultMap id="ExamineeMap" type="com.llt.recruit.model.Examinee">
  <id column="id" jdbcType="BIGINT" property="id" />
  <result column="username" jdbcType="VARCHAR" property="username" />
  <result column="name" jdbcType="VARCHAR" property="name" />
  <result column="role" jdbcType="VARCHAR" property="role" />
  <result column="nickname" jdbcType="VARCHAR" property="nickname" />
  <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  <result column="telephone" jdbcType="VARCHAR" property="telephone" />
  <result column="email" jdbcType="VARCHAR" property="email" />
  <result column="status" jdbcType="VARCHAR" property="status" />
  <result column="major" jdbcType="VARCHAR" property="major" />
  <result column="school" jdbcType="VARCHAR" property="school" />
</resultMap>


  <update id="findPassword">
    update user set password = MD5(#{password}) where id = #{userId}
  </update>

  <resultMap id="BaseResultMap" type="com.llt.recruit.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, name, role, nickname, avatar
  </sql>
  <select id="selectByExample" parameterType="com.llt.recruit.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.llt.recruit.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.llt.recruit.model.User">
    insert into user (id, username, password, 
      name, role, nickname, 
      avatar)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.llt.recruit.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.llt.recruit.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.llt.recruit.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.llt.recruit.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.llt.recruit.mapper.mapper.EntryFormMapper">


  <select id="findByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from entryForm where user_Id = #{id}
  </select>

  <delete id="deleteByUserId" parameterType="java.lang.Long" >
    delete from entryForm where user_Id = #{userId}
  </delete>


  <resultMap id="BaseResultMap" type="com.llt.recruit.model.EntryForm">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="test_Paper_Id" jdbcType="BIGINT" property="testPaperId" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_Id" jdbcType="BIGINT" property="userId" />
    <result column="date_Id" jdbcType="BIGINT" property="dateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, gender, school, age, test_Paper_Id, major, email, user_Id, date_Id
  </sql>
  <select id="selectByExample" parameterType="com.llt.recruit.model.EntryFormExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from entryform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from entryform
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from entryform
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.llt.recruit.model.EntryFormExample">
    delete from entryform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.llt.recruit.model.EntryForm">
    insert into entryform (id, name, gender, 
      school, age, test_Paper_Id, 
      major, email, user_Id, 
      date_Id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{testPaperId,jdbcType=BIGINT}, 
      #{major,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{dateId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.llt.recruit.model.EntryForm">
    insert into entryform
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="testPaperId != null">
        test_Paper_Id,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userId != null">
        user_Id,
      </if>
      <if test="dateId != null">
        date_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="testPaperId != null">
        #{testPaperId,jdbcType=BIGINT},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="dateId != null">
        #{dateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.llt.recruit.model.EntryFormExample" resultType="java.lang.Long">
    select count(*) from entryform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update entryform
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.testPaperId != null">
        test_Paper_Id = #{record.testPaperId,jdbcType=BIGINT},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_Id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.dateId != null">
        date_Id = #{record.dateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update entryform
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      test_Paper_Id = #{record.testPaperId,jdbcType=BIGINT},
      major = #{record.major,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      user_Id = #{record.userId,jdbcType=BIGINT},
      date_Id = #{record.dateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.llt.recruit.model.EntryForm">
    update entryform
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="testPaperId != null">
        test_Paper_Id = #{testPaperId,jdbcType=BIGINT},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_Id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="dateId != null">
        date_Id = #{dateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.llt.recruit.model.EntryForm">
    update entryform
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      test_Paper_Id = #{testPaperId,jdbcType=BIGINT},
      major = #{major,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_Id = #{userId,jdbcType=BIGINT},
      date_Id = #{dateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
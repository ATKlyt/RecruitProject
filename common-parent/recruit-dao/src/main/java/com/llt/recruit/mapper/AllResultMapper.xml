<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.llt.recruit.mapper.mapper.AllResultMapper">

  <update id="updateInterviewResult" >
    update allResult set interview_Result = #{interviewResult} where user_Id = #{userId}
  </update>

  <update id="updateWriteResult" >
    update allResult set write_Result = #{writeResult} where user_Id = #{userId}
  </update>

  <update id="updateBlankResult">
    update allResult set blank_Result = blank_Result + #{blankResult} where user_Id = #{userId}
  </update>

  <select id="findByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from allresult where user_Id = #{userId}
  </select>


  <resultMap id="BaseResultMap" type="com.llt.recruit.model.AllResult">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="blank_Result" jdbcType="INTEGER" property="blankResult" />
    <result column="choice_Result" jdbcType="INTEGER" property="choiceResult" />
    <result column="user_Id" jdbcType="BIGINT" property="userId" />
    <result column="write_Result" jdbcType="INTEGER" property="writeResult" />
    <result column="Interview_Result" jdbcType="INTEGER" property="interviewResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, blank_Result, choice_Result, user_Id, write_Result, Interview_Result
  </sql>
  <select id="selectByExample" parameterType="com.llt.recruit.model.AllResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from allresult
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from allresult
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from allresult
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.llt.recruit.model.AllResultExample">
    delete from allresult
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.llt.recruit.model.AllResult">
    insert into allresult (id, blank_Result, choice_Result, 
      user_Id, write_Result, Interview_Result
      )
    values (#{id,jdbcType=BIGINT}, #{blankResult,jdbcType=INTEGER}, #{choiceResult,jdbcType=INTEGER}, 
      #{userId,jdbcType=BIGINT}, #{writeResult,jdbcType=INTEGER}, #{interviewResult,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.llt.recruit.model.AllResult">
    insert into allresult
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blankResult != null">
        blank_Result,
      </if>
      <if test="choiceResult != null">
        choice_Result,
      </if>
      <if test="userId != null">
        user_Id,
      </if>
      <if test="writeResult != null">
        write_Result,
      </if>
      <if test="interviewResult != null">
        Interview_Result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="blankResult != null">
        #{blankResult,jdbcType=INTEGER},
      </if>
      <if test="choiceResult != null">
        #{choiceResult,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="writeResult != null">
        #{writeResult,jdbcType=INTEGER},
      </if>
      <if test="interviewResult != null">
        #{interviewResult,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.llt.recruit.model.AllResultExample" resultType="java.lang.Long">
    select count(*) from allresult
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update allresult
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.blankResult != null">
        blank_Result = #{record.blankResult,jdbcType=INTEGER},
      </if>
      <if test="record.choiceResult != null">
        choice_Result = #{record.choiceResult,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_Id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.writeResult != null">
        write_Result = #{record.writeResult,jdbcType=INTEGER},
      </if>
      <if test="record.interviewResult != null">
        Interview_Result = #{record.interviewResult,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update allresult
    set id = #{record.id,jdbcType=BIGINT},
      blank_Result = #{record.blankResult,jdbcType=INTEGER},
      choice_Result = #{record.choiceResult,jdbcType=INTEGER},
      user_Id = #{record.userId,jdbcType=BIGINT},
      write_Result = #{record.writeResult,jdbcType=INTEGER},
      Interview_Result = #{record.interviewResult,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.llt.recruit.model.AllResult">
    update allresult
    <set>
      <if test="blankResult != null">
        blank_Result = #{blankResult,jdbcType=INTEGER},
      </if>
      <if test="choiceResult != null">
        choice_Result = #{choiceResult,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_Id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="writeResult != null">
        write_Result = #{writeResult,jdbcType=INTEGER},
      </if>
      <if test="interviewResult != null">
        Interview_Result = #{interviewResult,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.llt.recruit.model.AllResult">
    update allresult
    set blank_Result = #{blankResult,jdbcType=INTEGER},
      choice_Result = #{choiceResult,jdbcType=INTEGER},
      user_Id = #{userId,jdbcType=BIGINT},
      write_Result = #{writeResult,jdbcType=INTEGER},
      Interview_Result = #{interviewResult,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>